/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FixedPointMath,
  FixedPointMathInterface,
} from "../FixedPointMath";

const _abi = [
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101b661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80632e0f262514610045578063c2ee3a081461005f575b600080fd5b61004d601281565b60405190815260200160405180910390f35b61004d61006e6012600a61016d565b81565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156100c25781600019048211156100a8576100a8610071565b808516156100b557918102915b93841c939080029061008c565b509250929050565b6000826100d957506001610167565b816100e657506000610167565b81600181146100fc576002811461010657610122565b6001915050610167565b60ff84111561011757610117610071565b50506001821b610167565b5060208310610133831016604e8410600b8410161715610145575081810a610167565b61014f8383610087565b806000190482111561016357610163610071565b0290505b92915050565b600061017983836100ca565b939250505056fea264697066735822122084dca4f108b8e119006e05efd3d6822ac86f3d8bdf5094788cb52c69149c510264736f6c634300080b0033";

export class FixedPointMath__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FixedPointMath> {
    return super.deploy(overrides || {}) as Promise<FixedPointMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FixedPointMath {
    return super.attach(address) as FixedPointMath;
  }
  connect(signer: Signer): FixedPointMath__factory {
    return super.connect(signer) as FixedPointMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedPointMathInterface {
    return new utils.Interface(_abi) as FixedPointMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FixedPointMath {
    return new Contract(address, _abi, signerOrProvider) as FixedPointMath;
  }
}
