/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestStruct, TestStructInterface } from "../TestStruct";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "weightToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "weights",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "alchemists",
        type: "address[]",
      },
    ],
    name: "fillFoo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "foos",
    outputs: [
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "weightToken",
        type: "address",
      },
    ],
    name: "getFoo",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "alchemists",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "weights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b39806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638129fc1c14610051578063823210d51461005b578063835306bd1461006e578063fd7253f9146100a4575b600080fd5b6100596100c7565b005b6100596100693660046108b7565b610184565b61009161007c366004610961565b60016020526000908152604090206002015481565b6040519081526020015b60405180910390f35b6100b76100b2366004610961565b610454565b60405161009b94939291906109c7565b600054610100900460ff166100e25760005460ff16156100e6565b303b155b61014d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff1615801561016f576000805461ffff19166101011790555b8015610181576000805461ff00191690555b50565b60005b8581101561044a578282828181106101a1576101a1610a39565b90506020020160208101906101b69190610961565b6001600160a01b0389166000908152600160205260408120600301908989858181106101e4576101e4610a39565b90506020020160208101906101f99190610961565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905584848281811061023c5761023c610a39565b6001600160a01b038b1660009081526001602090815260408220920293909301359290915089898581811061027357610273610a39565b90506020020160208101906102889190610961565b6001600160a01b031681526020810191909152604001600020558484828181106102b4576102b4610a39565b90506020020135600160008a6001600160a01b03166001600160a01b0316815260200190815260200160002060020160008282546102f29190610a65565b9091555060009050805b6001600160a01b038a16600090815260016020819052604090912001548110156103bb5788888481811061033257610332610a39565b90506020020160208101906103479190610961565b6001600160a01b0316600160008c6001600160a01b03166001600160a01b03168152602001908152602001600020600101828154811061038957610389610a39565b6000918252602090912001546001600160a01b031614156103a957600191505b806103b381610a7d565b9150506102fc565b5080610437576001600160a01b0389166000908152600160208190526040909120018888848181106103ef576103ef610a39565b90506020020160208101906104049190610961565b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b039092169190911790555b508061044281610a7d565b915050610187565b5050505050505050565b6060806060600061047d604051806040016040528060018152602001600360fc1b8152506107f1565b6001600160a01b0385166000908152600160208181526040928390208351808501909452918352603160f81b90830152906104b7906107f1565b60018101546001600160401b038111156104d3576104d3610a98565b6040519080825280602002602001820160405280156104fc578160200160208202803683370190505b5060018201549095506001600160401b0381111561051c5761051c610a98565b604051908082528060200260200182016040528015610545578160200160208202803683370190505b50935061056a604051806040016040528060018152602001601960f91b8152506107f1565b60018101546001600160401b0381111561058657610586610a98565b6040519080825280602002602001820160405280156105af578160200160208202803683370190505b5092506105d4604051806040016040528060018152602001603360f81b8152506107f1565b60005b60018201548110156107e857610605604051806040016040528060018152602001600d60fa1b8152506107f1565b81600101818154811061061a5761061a610a39565b9060005260206000200160009054906101000a90046001600160a01b031686828151811061064a5761064a610a39565b60200260200101906001600160a01b031690816001600160a01b03168152505061068c604051806040016040528060018152602001603560f81b8152506107f1565b8160030160008360010183815481106106a7576106a7610a39565b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190205486519116908690839081106106e8576106e8610a39565b60200260200101906001600160a01b031690816001600160a01b03168152505081600001600083600101838154811061072357610723610a39565b60009182526020808320909101546001600160a01b03168352820192909252604001902054845185908390811061075c5761075c610a39565b60200260200101818152505061078a604051806040016040528060018152602001601b60f91b8152506107f1565b8160000160008360010183815481106107a5576107a5610a39565b60009182526020808320909101546001600160a01b031683528201929092526040019020546107d49084610a65565b9250806107e081610a7d565b9150506105d7565b50509193509193565b610181816040516024016108059190610aae565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461086757600080fd5b919050565b60008083601f84011261087e57600080fd5b5081356001600160401b0381111561089557600080fd5b6020830191508360208260051b85010111156108b057600080fd5b9250929050565b60008060008060008060006080888a0312156108d257600080fd5b6108db88610850565b965060208801356001600160401b03808211156108f757600080fd5b6109038b838c0161086c565b909850965060408a013591508082111561091c57600080fd5b6109288b838c0161086c565b909650945060608a013591508082111561094157600080fd5b5061094e8a828b0161086c565b989b979a50959850939692959293505050565b60006020828403121561097357600080fd5b61097c82610850565b9392505050565b600081518084526020808501945080840160005b838110156109bc5781516001600160a01b031687529582019590820190600101610997565b509495945050505050565b6080815260006109da6080830187610983565b6020838203818501526109ed8288610983565b8481036040860152865180825282880193509082019060005b81811015610a2257845183529383019391830191600101610a06565b505080935050505082606083015295945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610a7857610a78610a4f565b500190565b6000600019821415610a9157610a91610a4f565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600060208083528351808285015260005b81811015610adb57858101830151858201604001528201610abf565b81811115610aed576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122014e9ea86cd2be66b673a9703d5bd62f3608c0127d450e3876dcf131e7273c51164736f6c634300080b0033";

export class TestStruct__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestStruct> {
    return super.deploy(overrides || {}) as Promise<TestStruct>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestStruct {
    return super.attach(address) as TestStruct;
  }
  connect(signer: Signer): TestStruct__factory {
    return super.connect(signer) as TestStruct__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestStructInterface {
    return new utils.Interface(_abi) as TestStructInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestStruct {
    return new Contract(address, _abi, signerOrProvider) as TestStruct;
  }
}
