/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Whitelists, WhitelistsInterface } from "../Whitelists";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "IllegalState",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "whitelistedContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccountAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "whitelistedContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccountRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "whitelistedContract",
        type: "address",
      },
    ],
    name: "WhitelistDisabled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "whitelistedContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "whitelistedContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "checkWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "whitelistedContract",
        type: "address",
      },
    ],
    name: "disableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "whitelistedContract",
        type: "address",
      },
    ],
    name: "getAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "whitelistedContract",
        type: "address",
      },
    ],
    name: "isWhitelistDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "disabled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "whitelistedContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109268061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063575182431461008857806357e82fc71461009d5780636e5cbede146100e1578063715018a6146100f45780638da5cb5b146100fc578063906f634314610111578063dc1a091114610131578063f2fde38b14610144578063f8d3277d14610157575b600080fd5b61009b610096366004610763565b61016a565b005b6100cc6100ab366004610796565b6001600160a01b031660009081526001602052604090206002015460ff1690565b60405190151581526020015b60405180910390f35b61009b6100ef366004610796565b61020f565b61009b61027a565b6101046102be565b6040516100d891906107b8565b61012461011f366004610796565b6102cd565b6040516100d891906107cc565b6100cc61013f366004610763565b610343565b61009b610152366004610796565b6103c0565b61009b610165366004610763565b610460565b6101726104f9565b6001600160a01b03821660009081526001602052604090206002015460ff16156101af57604051634a613c4160e01b815260040160405180910390fd5b6001600160a01b03821660009081526001602052604090206101d19082610531565b507fe52e4ef92864f154af9c2e5f86e702138edb1c15420b2331668b707b7a7551318282604051610203929190610819565b60405180910390a15050565b6102176104f9565b6001600160a01b038116600090815260016020819052604091829020600201805460ff19169091179055517fc0e106cf568e50698fdbde1eff56f5a5c966cc7958e37e276918e9e4ccdf8cd49061026f9083906107b8565b60405180910390a150565b336102836102be565b6001600160a01b0316146102b25760405162461bcd60e51b81526004016102a990610833565b60405180910390fd5b6102bc6000610592565b565b6000546001600160a01b031690565b6001600160a01b03811660009081526001602090815260409182902080548351818402810184019094528084526060939283018282801561033757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610319575b50505050509050919050565b6001600160a01b03821660009081526001602052604081206002015460ff161561036f575060016103ba565b326001600160a01b0383161415610388575060016103ba565b6001600160a01b03831660009081526001602052604090206103aa90836105e2565b6103b6575060006103ba565b5060015b92915050565b336103c96102be565b6001600160a01b0316146103ef5760405162461bcd60e51b81526004016102a990610833565b6001600160a01b0381166104545760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a9565b61045d81610592565b50565b6104686104f9565b6001600160a01b03821660009081526001602052604090206002015460ff16156104a557604051634a613c4160e01b815260040160405180910390fd5b6001600160a01b03821660009081526001602052604090206104c79082610603565b507f08af378b54239086a5c1919a95f49b6547e8360d38a1d9294d9e008977856d9a8282604051610203929190610819565b6105016102be565b6001600160a01b0316336001600160a01b0316146102bc576040516282b42960e81b815260040160405180910390fd5b600061053d83836105e2565b1561054a575060006103ba565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b031660009081526001919091016020526040902054151590565b6001600160a01b03811660009081526001830160205260408120548061062d5760009150506103ba565b806106378161087e565b85549092506000915061064c90600190610895565b90508082146106ec57600085600001828154811061066c5761066c6108ac565b60009182526020909120015486546001600160a01b039091169150819087908590811061069b5761069b6108ac565b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790556106cf8360016108c2565b6001600160a01b0390911660009081526001870160205260409020555b84548590806106fd576106fd6108da565b60008281526020808220600019908401810180546001600160a01b03191690559092019092556001600160a01b039590951681526001958601909452505060408220919091555090565b80356001600160a01b038116811461075e57600080fd5b919050565b6000806040838503121561077657600080fd5b61077f83610747565b915061078d60208401610747565b90509250929050565b6000602082840312156107a857600080fd5b6107b182610747565b9392505050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561080d5783516001600160a01b0316835292840192918401916001016107e8565b50909695505050505050565b6001600160a01b0392831681529116602082015260400190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008161088d5761088d610868565b506000190190565b6000828210156108a7576108a7610868565b500390565b634e487b7160e01b600052603260045260246000fd5b600082198211156108d5576108d5610868565b500190565b634e487b7160e01b600052603160045260246000fdfea26469706673582212207b6574c7b3c3914be805ad20289dc4f08409917860cc17e7e271f6e87fb288ae64736f6c634300080b0033";

export class Whitelists__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Whitelists> {
    return super.deploy(overrides || {}) as Promise<Whitelists>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Whitelists {
    return super.attach(address) as Whitelists;
  }
  connect(signer: Signer): Whitelists__factory {
    return super.connect(signer) as Whitelists__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistsInterface {
    return new utils.Interface(_abi) as WhitelistsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Whitelists {
    return new Contract(address, _abi, signerOrProvider) as Whitelists;
  }
}
