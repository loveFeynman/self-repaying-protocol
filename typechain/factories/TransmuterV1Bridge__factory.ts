/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TransmuterV1Bridge,
  TransmuterV1BridgeInterface,
} from "../TransmuterV1Bridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_transmuter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_transmuter",
        type: "address",
      },
    ],
    name: "setTransmuter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transmuter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105a23803806105a283398101604081905261002f916100ad565b6100383361005d565b600280546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6104b6806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ed5780639b19251a146100fe578063adb4a9ad14610131578063f2fde38b1461014457600080fd5b8063535565591461008d57806353d6fd59146100a2578063715018a6146100b55780637239d2b9146100bd575b600080fd5b6100a061009b3660046103b8565b610157565b005b6100a06100b03660046103ed565b6101ed565b6100a061024b565b6002546100d0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b03166100d0565b61012161010c366004610429565b60016020526000908152604090205460ff1681565b60405190151581526020016100e4565b6100a061013f366004610429565b610281565b6100a0610152366004610429565b6102cd565b3360009081526001602052604090205460ff16610186576040516282b42960e81b815260040160405180910390fd5b600254604051631f72642160e31b8152336004820152602481018390526001600160a01b039091169063fb93210890604401600060405180830381600087803b1580156101d257600080fd5b505af11580156101e6573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031633146102205760405162461bcd60e51b81526004016102179061044b565b60405180910390fd5b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b6000546001600160a01b031633146102755760405162461bcd60e51b81526004016102179061044b565b61027f6000610368565b565b6000546001600160a01b031633146102ab5760405162461bcd60e51b81526004016102179061044b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102f75760405162461bcd60e51b81526004016102179061044b565b6001600160a01b03811661035c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610217565b61036581610368565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156103ca57600080fd5b5035919050565b80356001600160a01b03811681146103e857600080fd5b919050565b6000806040838503121561040057600080fd5b610409836103d1565b91506020830135801515811461041e57600080fd5b809150509250929050565b60006020828403121561043b57600080fd5b610444826103d1565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122027ab153aad61b68d83c8cff5461e52f86565eea9667c1b497309f9500e7d06a864736f6c634300080b0033";

export class TransmuterV1Bridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _transmuter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TransmuterV1Bridge> {
    return super.deploy(
      _transmuter,
      overrides || {}
    ) as Promise<TransmuterV1Bridge>;
  }
  getDeployTransaction(
    _transmuter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_transmuter, overrides || {});
  }
  attach(address: string): TransmuterV1Bridge {
    return super.attach(address) as TransmuterV1Bridge;
  }
  connect(signer: Signer): TransmuterV1Bridge__factory {
    return super.connect(signer) as TransmuterV1Bridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransmuterV1BridgeInterface {
    return new utils.Interface(_abi) as TransmuterV1BridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransmuterV1Bridge {
    return new Contract(address, _abi, signerOrProvider) as TransmuterV1Bridge;
  }
}
