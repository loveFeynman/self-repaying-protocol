/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OZUpgradeTestBad,
  OZUpgradeTestBadInterface,
} from "../OZUpgradeTestBad";

const _abi = [
  {
    inputs: [],
    name: "amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610231806100206000396000f3fe60806040526004361061003f5760003560e01c80635c05d27a14610044578063aa8c217c1461007a578063c4d66de81461009e578063fc0c546a146100b3575b600080fd5b34801561005057600080fd5b5060005461006590600160b01b900460ff1681565b60405190151581526020015b60405180910390f35b34801561008657600080fd5b5061009060015481565b604051908152602001610071565b6100b16100ac3660046101cb565b6100f1565b005b3480156100bf57600080fd5b506000546100d9906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610071565b600054610100900460ff168061010a575060005460ff16155b6101715760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015610193576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0385160217905580156101c7576000805461ff00191690555b5050565b6000602082840312156101dd57600080fd5b81356001600160a01b03811681146101f457600080fd5b939250505056fea2646970667358221220f18741bc42e7442de1a9944059d7b608b8f0ded911cc1aa820d2229d63e38fed64736f6c63430008090033";

export class OZUpgradeTestBad__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OZUpgradeTestBad> {
    return super.deploy(overrides || {}) as Promise<OZUpgradeTestBad>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OZUpgradeTestBad {
    return super.attach(address) as OZUpgradeTestBad;
  }
  connect(signer: Signer): OZUpgradeTestBad__factory {
    return super.connect(signer) as OZUpgradeTestBad__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OZUpgradeTestBadInterface {
    return new utils.Interface(_abi) as OZUpgradeTestBadInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OZUpgradeTestBad {
    return new Contract(address, _abi, signerOrProvider) as OZUpgradeTestBad;
  }
}
