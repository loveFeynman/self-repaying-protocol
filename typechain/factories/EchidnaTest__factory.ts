/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EchidnaTest, EchidnaTestInterface } from "../EchidnaTest";

const _abi = [
  {
    inputs: [],
    name: "echidna_alwaystrue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "echidna_revert_always",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "echidna_sometimesfalse",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "set0",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "set1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805461ffff191661010117905534801561001f57600080fd5b506101768061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806337841d371461005c5780635fcf9fce1461007c578063d90babde14610083578063e48f28d214610098578063e7c0d70c146100ab575b600080fd5b600054610100900460ff165b604051901515815260200160405180910390f35b6001610068565b610096610091366004610105565b6100b3565b005b6100966100a6366004610105565b6100d0565b6100686100fe565b6100be60648261011e565b6100cd576000805460ff191690555b50565b6100db600a8261011e565b1580156100eb575060005460ff16155b156100cd576000805461ff001916905550565b6000806000fd5b60006020828403121561011757600080fd5b5035919050565b60008261013b57634e487b7160e01b600052601260045260246000fd5b50079056fea264697066735822122042daa0ecc21ca326357df045ab83332f8373c72b7d5497fa0ea04b6b06dd4b2a64736f6c634300080b0033";

export class EchidnaTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EchidnaTest> {
    return super.deploy(overrides || {}) as Promise<EchidnaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EchidnaTest {
    return super.attach(address) as EchidnaTest;
  }
  connect(signer: Signer): EchidnaTest__factory {
    return super.connect(signer) as EchidnaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EchidnaTestInterface {
    return new utils.Interface(_abi) as EchidnaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EchidnaTest {
    return new Contract(address, _abi, signerOrProvider) as EchidnaTest;
  }
}
