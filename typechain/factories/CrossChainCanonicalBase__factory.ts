/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrossChainCanonicalBase,
  CrossChainCanonicalBaseInterface,
} from "../CrossChainCanonicalBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ERC20CallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "IllegalArgument",
    type: "error",
  },
  {
    inputs: [],
    name: "IllegalState",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeTokenAddress",
        type: "address",
      },
    ],
    name: "BridgeTokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "BridgeTokenToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bridgeToCanonical",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "canonicalToOld",
        type: "uint256",
      },
    ],
    name: "SwapFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeTokenAddress",
        type: "address",
      },
    ],
    name: "addBridgeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allBridgeTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bridgeTokenEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bridgeTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bridgeTokensArray",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "exchangeCanonicalForOld",
    outputs: [
      {
        internalType: "uint256",
        name: "bridgeTokensOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "exchangeOldForCanonical",
    outputs: [
      {
        internalType: "uint256",
        name: "canonicalTokensOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangesPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeExempt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_bridgeToCanonical",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_canonicalToOld",
        type: "uint256",
      },
    ],
    name: "setSwapFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swapFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeTokenAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "toggleBridgeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleExchanges",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "toggleFeesForAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612058806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063a457c2d7116100a2578063cd4839ca11610071578063cd4839ca1461044b578063d505accf14610460578063dd62ed3e14610473578063f2fde38b146104ac57600080fd5b8063a457c2d7146103ee578063a7c571fe14610401578063a9059cbb14610414578063bf15c2241461042757600080fd5b80638980f11f116100de5780638980f11f146103af5780638da5cb5b146103c25780639006a50f146103d357806395d89b41146103e657600080fd5b806370a0823114610363578063715018a61461038c5780637601f069146103945780637ecebe001461039c57600080fd5b8063280cf3ed11610187578063395093511161015657806339509351146102f5578063398daa8514610308578063459d0df01461032c5780636d1ac36a1461033f57600080fd5b8063280cf3ed146102b8578063313ce567146102cb5780633644e515146102da5780633864376b146102e257600080fd5b806313489515116101c3578063134895151461025557806318160ddd1461026857806323b872dd1461027a578063248756d91461028d57600080fd5b806305a7fc61146101f557806306fdde03146102185780630919a9511461022d578063095ea7b314610242575b600080fd5b610134546102039060ff1681565b60405190151581526020015b60405180910390f35b6102206104bf565b60405161020f9190611c42565b61024061023b366004611c78565b610551565b005b610203610250366004611c93565b6105ae565b610240610263366004611c78565b6105c4565b6035545b60405190815260200161020f565b610203610288366004611cbd565b6106f2565b6102a061029b366004611cf9565b61079c565b6040516001600160a01b03909116815260200161020f565b61026c6102c6366004611c93565b6107c7565b6040516012815260200161020f565b61026c61093b565b6102406102f0366004611d20565b61094a565b610203610303366004611c93565b6109d4565b610203610316366004611c78565b6101316020526000908152604090205460ff1681565b61026c61033a366004611c93565b610a10565b61020361034d366004611c78565b6101336020526000908152604090205460ff1681565b61026c610371366004611c78565b6001600160a01b031660009081526033602052604090205490565b610240610a36565b610240610a6c565b61026c6103aa366004611c78565b610aab565b6102406103bd366004611c93565b610acb565b60fe546001600160a01b03166102a0565b61026c6103e1366004611c93565b610b69565b610220610ccf565b6102036103fc366004611c93565b610cde565b61024061040f366004611d57565b610d77565b610203610422366004611c93565b610e23565b610203610435366004611c78565b6101356020526000908152604090205460ff1681565b610453610e30565b60405161020f9190611d8a565b61024061046e366004611dd7565b610e92565b61026c610481366004611e4a565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6102406104ba366004611c78565b610fd8565b6060603680546104ce90611e7d565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa90611e7d565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b60fe546001600160a01b031633146105845760405162461bcd60e51b815260040161057b90611eb2565b60405180910390fd5b6001600160a01b0316600090815261013160205260409020805460ff19811660ff90911615179055565b60006105bb338484611073565b50600192915050565b60fe546001600160a01b031633146105ee5760405162461bcd60e51b815260040161057b90611eb2565b60005b6101325481101561066057816001600160a01b0316610132828154811061061a5761061a611ee7565b6000918252602090912001546001600160a01b0316141561064e57604051634a613c4160e01b815260040160405180910390fd5b8061065881611f13565b9150506105f1565b50610132805460018082019092557fc53bdfd4aa1ab65dfdaf681ca6bda958ae4a123d4ed68c4277796592280e78350180546001600160a01b0319166001600160a01b03841690811790915560008181526101356020526040808220805460ff1916909417909355915190917fa1f77cf0208e08e61710338f5370c9eba737ddc758d9f317dc5bdcff348e6e1a91a250565b60006106ff848484611198565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156107845760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161057b565b6107918533858403611073565b506001949350505050565b61013281815481106107ad57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000600260cc54141561081c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161057b565b600260cc556001600160a01b03831660009081526101356020526040902054839060ff1661085d57604051634a613c4160e01b815260040160405180910390fd5b6101345460ff161561088257604051634a613c4160e01b815260040160405180910390fd5b6001600160a01b0384166000908152610135602052604090205460ff166108bc57604051634a613c4160e01b815260040160405180910390fd5b6108c63384611368565b336000908152610131602052604090205483925060ff16610924576001600160a01b038416600090815261013060205260409020620f4240906001015461090d9084611f2e565b6109179190611f4d565b6109219083611f6f565b91505b61092f8433846114ae565b50600160cc5592915050565b60006109456115a5565b905090565b60fe546001600160a01b031633146109745760405162461bcd60e51b815260040161057b90611eb2565b6001600160a01b03821660008181526101356020908152604091829020805460ff191685151590811790915591519182527ff7c93079dcbf699749d66345a351afab7d24219bb1d915c9f4fc4cf03f00d397910160405180910390a25050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490916105bb918590610a0b908690611f86565b611073565b6101306020528160005260406000208160028110610a2d57600080fd5b01549150829050565b60fe546001600160a01b03163314610a605760405162461bcd60e51b815260040161057b90611eb2565b610a6a6000611620565b565b60fe546001600160a01b03163314610a965760405162461bcd60e51b815260040161057b90611eb2565b610134805460ff19811660ff90911615179055565b6001600160a01b0381166000908152609960205260408120545b92915050565b60fe546001600160a01b03163314610af55760405162461bcd60e51b815260040161057b90611eb2565b6001600160a01b038216301415610b1f57604051630134249960e71b815260040160405180910390fd5b6001600160a01b0382166000908152610135602052604090205460ff1615610b5a57604051634a613c4160e01b815260040160405180910390fd5b610b658233836114ae565b5050565b6000600260cc541415610bbe5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161057b565b600260cc556001600160a01b03831660009081526101356020526040902054839060ff16610bff57604051634a613c4160e01b815260040160405180910390fd5b6101345460ff1615610c2457604051634a613c4160e01b815260040160405180910390fd5b6001600160a01b0384166000908152610135602052604090205460ff16610c5e57604051634a613c4160e01b815260040160405180910390fd5b610c6a84333086611672565b336000908152610131602052604090205483925060ff16610cc5576001600160a01b03841660009081526101306020526040902054620f424090610cae9084611f2e565b610cb89190611f4d565b610cc29083611f6f565b91505b61092f3383611772565b6060603780546104ce90611e7d565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015610d605760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161057b565b610d6d3385858403611073565b5060019392505050565b60fe546001600160a01b03163314610da15760405162461bcd60e51b815260040161057b90611eb2565b60408051808201825283815260208082018490526001600160a01b038616600090815261013090915291909120610dd9916002611b97565b5060408051838152602081018390526001600160a01b038516917ff36e5def0a9227cce1f483e62a6b168e5c1dd4aa7e887e300745cdc4c2b5ab2d910160405180910390a2505050565b60006105bb338484611198565b606061013280548060200260200160405190810160405280929190818152602001828054801561054757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e6b575050505050905090565b83421115610ee25760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161057b565b6000609a54888888610ef38c611851565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610f4e82611879565b90506000610f5e828787876118c7565b9050896001600160a01b0316816001600160a01b031614610fc15760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161057b565b610fcc8a8a8a611073565b50505050505050505050565b60fe546001600160a01b031633146110025760405162461bcd60e51b815260040161057b90611eb2565b6001600160a01b0381166110675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161057b565b61107081611620565b50565b6001600160a01b0383166110d55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161057b565b6001600160a01b0382166111365760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161057b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166111fc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161057b565b6001600160a01b03821661125e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161057b565b6001600160a01b038316600090815260336020526040902054818110156112d65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161057b565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061130d908490611f86565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161135991815260200190565b60405180910390a35b50505050565b6001600160a01b0382166113c85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161057b565b6001600160a01b0382166000908152603360205260409020548181101561143c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161057b565b6001600160a01b038316600090815260336020526040812083830390556035805484929061146b908490611f6f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161118b565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161150a9190611f9e565b6000604051808303816000865af19150503d8060008114611547576040519150601f19603f3d011682016040523d82523d6000602084013e61154c565b606091505b509150915081158061157a575080511580159061157a5750808060200190518101906115789190611fba565b155b1561159e5784828260405163e7e40b5b60e01b815260040161057b93929190611fd7565b5050505050565b60006109457f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6115d460655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60fe80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916116d69190611f9e565b6000604051808303816000865af19150503d8060008114611713576040519150601f19603f3d011682016040523d82523d6000602084013e611718565b606091505b509150915081158061174657508051158015906117465750808060200190518101906117449190611fba565b155b1561176a5785828260405163e7e40b5b60e01b815260040161057b93929190611fd7565b505050505050565b6001600160a01b0382166117c85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161057b565b80603560008282546117da9190611f86565b90915550506001600160a01b03821660009081526033602052604081208054839290611807908490611f86565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b6000610ac56118866115a5565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006118d8878787876118ef565b915091506118e5816119dc565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561192657506000905060036119d3565b8460ff16601b1415801561193e57508460ff16601c14155b1561194f57506000905060046119d3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156119a3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119cc576000600192509250506119d3565b9150600090505b94509492505050565b60008160048111156119f0576119f061200c565b14156119f95750565b6001816004811115611a0d57611a0d61200c565b1415611a5b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161057b565b6002816004811115611a6f57611a6f61200c565b1415611abd5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161057b565b6003816004811115611ad157611ad161200c565b1415611b2a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161057b565b6004816004811115611b3e57611b3e61200c565b14156110705760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161057b565b8260028101928215611bc5579160200282015b82811115611bc5578251825591602001919060010190611baa565b50611bd1929150611bd5565b5090565b5b80821115611bd15760008155600101611bd6565b60005b83811015611c05578181015183820152602001611bed565b838111156113625750506000910152565b60008151808452611c2e816020860160208601611bea565b601f01601f19169290920160200192915050565b602081526000611c556020830184611c16565b9392505050565b80356001600160a01b0381168114611c7357600080fd5b919050565b600060208284031215611c8a57600080fd5b611c5582611c5c565b60008060408385031215611ca657600080fd5b611caf83611c5c565b946020939093013593505050565b600080600060608486031215611cd257600080fd5b611cdb84611c5c565b9250611ce960208501611c5c565b9150604084013590509250925092565b600060208284031215611d0b57600080fd5b5035919050565b801515811461107057600080fd5b60008060408385031215611d3357600080fd5b611d3c83611c5c565b91506020830135611d4c81611d12565b809150509250929050565b600080600060608486031215611d6c57600080fd5b611d7584611c5c565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b81811015611dcb5783516001600160a01b031683529284019291840191600101611da6565b50909695505050505050565b600080600080600080600060e0888a031215611df257600080fd5b611dfb88611c5c565b9650611e0960208901611c5c565b95506040880135945060608801359350608088013560ff81168114611e2d57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e5d57600080fd5b611e6683611c5c565b9150611e7460208401611c5c565b90509250929050565b600181811c90821680611e9157607f821691505b6020821081141561187357634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611f2757611f27611efd565b5060010190565b6000816000190483118215151615611f4857611f48611efd565b500290565b600082611f6a57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611f8157611f81611efd565b500390565b60008219821115611f9957611f99611efd565b500190565b60008251611fb0818460208701611bea565b9190910192915050565b600060208284031215611fcc57600080fd5b8151611c5581611d12565b6001600160a01b0384168152821515602082015260606040820181905260009061200390830184611c16565b95945050505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b6b44a3f689abae3c9a9e1c169d56cde4cf61469622f89940b101d1f4c879c7064736f6c634300080b0033";

export class CrossChainCanonicalBase__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrossChainCanonicalBase> {
    return super.deploy(overrides || {}) as Promise<CrossChainCanonicalBase>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrossChainCanonicalBase {
    return super.attach(address) as CrossChainCanonicalBase;
  }
  connect(signer: Signer): CrossChainCanonicalBase__factory {
    return super.connect(signer) as CrossChainCanonicalBase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainCanonicalBaseInterface {
    return new utils.Interface(_abi) as CrossChainCanonicalBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainCanonicalBase {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainCanonicalBase;
  }
}
