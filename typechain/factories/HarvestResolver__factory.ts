/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HarvestResolver,
  HarvestResolverInterface,
} from "../HarvestResolver";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HarvestJobDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "IllegalArgument",
    type: "error",
  },
  {
    inputs: [],
    name: "YieldTokenDisabled",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
    ],
    name: "RemoveHarvestJob",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "alchemist",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumHarvestAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumDelay",
        type: "uint256",
      },
    ],
    name: "SetHarvestJob",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "alchemist",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumHarvestAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumDelay",
        type: "uint256",
      },
    ],
    name: "addHarvestJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "harvestJobs",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "address",
        name: "alchemist",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastHarvest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumHarvestAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumDelay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recoverFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
    ],
    name: "removeHarvestJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "setActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "alchemist",
        type: "address",
      },
    ],
    name: "setAlchemist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumDelay",
        type: "uint256",
      },
    ],
    name: "setMinimumDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumHarvestAmount",
        type: "uint256",
      },
    ],
    name: "setMinimumHarvestAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pauseState",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "yieldTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61142d8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c80632ce962cf146100ca578063384ca4b6146100df578063539efd4b146100f25780635c975abb1461011b5780636c7be33714610138578063715018a61461014b5780638da5cb5b14610153578063b018895c1461015b578063b22360211461016e578063b73cc2a314610181578063bedb86fb14610194578063cf5303cf146101a7578063e635d5f2146101bd578063e72f6e3014610238578063f2fde38b1461024b575b600080fd5b6100dd6100d8366004610ed7565b61025e565b005b6100dd6100ed366004610f10565b6102c1565b610105610100366004610f6b565b61051d565b6040516101129190610f84565b60405180910390f35b6003546101289060ff1681565b6040519015158152602001610112565b6100dd610146366004610f98565b610547565b6100dd610645565b610105610680565b6100dd610169366004610fc6565b61068f565b6100dd61017c366004610ff2565b6106dd565b6100dd61018f366004610fc6565b6108ed565b6100dd6101a2366004611016565b61093c565b6101af61097e565b604051610112929190611033565b6102066101cb366004610ff2565b6002602081905260009182526040909120805460018201549282015460039092015460ff8216936101009092046001600160a01b0316929085565b6040805195151586526001600160a01b039094166020860152928401919091526060830152608082015260a001610112565b6100dd610246366004610ff2565b610c62565b6100dd610259366004610ff2565b610d77565b33610267610680565b6001600160a01b0316146102965760405162461bcd60e51b815260040161028d90611092565b60405180910390fd5b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b336102ca610680565b6001600160a01b0316146102f05760405162461bcd60e51b815260040161028d90611092565b604051635a5efc8b60e01b81526000906001600160a01b03851690635a5efc8b9061031f908890600401610f84565b6101e060405180830381865afa15801561033d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610361919061112a565b9050806101c00151610386576040516303e75d1560e21b815260040160405180910390fd5b6040805160a08101825287151581526001600160a01b0386811660208084019182524284860190815260608501898152608086018981528c861660009081526002948590529788209651875495516001600160a81b0319909616901515610100600160a81b031916176101009590961694909402949094178555516001850155915191830191909155516003909101555b60015481101561047257856001600160a01b03166001828154811061043e5761043e6111ff565b6000918252602090912001546001600160a01b03161415610460575050610516565b8061046a8161122b565b915050610417565b506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b038781166001600160a01b03199092168217909255604080518915158152602081019290925291861681830152606081018590526080810184905290517f94c77c48504c51cc958221654f68f5949e716b6b65b851eb6bcae7d87d614a1c9181900360a00190a1505b5050505050565b6001818154811061052d57600080fd5b6000918252602090912001546001600160a01b0316905081565b33610550610680565b6001600160a01b0316146105765760405162461bcd60e51b815260040161028d90611092565b604051635a5efc8b60e01b81526000906001600160a01b03831690635a5efc8b906105a5908690600401610f84565b6101e060405180830381865afa1580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e7919061112a565b9050806101c0015161060c576040516303e75d1560e21b815260040160405180910390fd5b506001600160a01b03918216600090815260026020526040902080549290911661010002610100600160a81b0319909216919091179055565b3361064e610680565b6001600160a01b0316146106745760405162461bcd60e51b815260040161028d90611092565b61067e6000610e17565b565b6000546001600160a01b031690565b33610698610680565b6001600160a01b0316146106be5760405162461bcd60e51b815260040161028d90611092565b6001600160a01b03909116600090815260026020526040902060030155565b336106e6610680565b6001600160a01b03161461070c5760405162461bcd60e51b815260040161028d90611092565b60001960005b60015481101561077257826001600160a01b031660018281548110610739576107396111ff565b6000918252602090912001546001600160a01b031614156107605761075d81610e67565b91505b8061076a8161122b565b915050610712565b506000198113156108d05760026000600161078c84610e91565b8154811061079c5761079c6111ff565b60009182526020808320909101546001600160a01b03168352820192909252604001812080546001600160a81b031916815560018181018390556002820183905560039091019190915580546107f3908290611246565b81548110610803576108036111ff565b6000918252602090912001546001600160a01b0316600161082383610e91565b81548110610833576108336111ff565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060018054806108725761087261125d565b600082815260209020810160001990810180546001600160a01b03191690550190556040517fdd2f9126294675e89c6ca967164843d07ab1cc694b6812112c89c6ae64eed7c7906108c4908490610f84565b60405180910390a15050565b604051630658884760e41b815260040160405180910390fd5b5050565b336108f6610680565b6001600160a01b03161461091c5760405162461bcd60e51b815260040161028d90611092565b6001600160a01b0390911660009081526002602081905260409091200155565b33610945610680565b6001600160a01b03161461096b5760405162461bcd60e51b815260040161028d90611092565b6003805460ff1916911515919091179055565b60035460009060609060ff16156109b6576040805160006020820181905291015b604051602081830303815290604052915091509091565b60005b600154811015610c4d576000600182815481106109d8576109d86111ff565b60009182526020808320909101546001600160a01b039081168084526002808452604094859020855160a081018752815460ff81161580158352610100909104909516958101959095526001810154958501959095528401546060840152600390930154608083015291925090610c38576020810151604051635a5efc8b60e01b81526000916001600160a01b031690635a5efc8b90610a7c908690600401610f84565b6101e060405180830381865afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe919061112a565b9050806101c0015115610c36578051600090610adb90600a611359565b82604001516001600160a01b031663a035b1fe6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b419190611368565b8360e001518460c00151610b559190611381565b610b5f9190611399565b610b6991906113b8565b905082608001518360400151610b7f9190611381565b4210158015610ba157508260600151826101200151610b9e9190611381565b81115b15610c3457600082610120015182610bb99190611246565b9050610bc66064826113b8565b610bd09082611246565b602094850151604080516001600160a01b039283166024820152979091166044880152606480880192909252805180880390920182526084909601909552505050810180516001600160e01b031663a782a85760e01b179052600194909350915050565b505b505b50508080610c459061122b565b9150506109b9565b5060408051600060208201819052910161099f565b33610c6b610680565b6001600160a01b031614610c915760405162461bcd60e51b815260040161028d90611092565b6040516370a0823160e01b81526001600160a01b0382169063a9059cbb90339083906370a0823190610cc7903090600401610f84565b602060405180830381865afa158015610ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d089190611368565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610d53573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e991906113da565b33610d80610680565b6001600160a01b031614610da65760405162461bcd60e51b815260040161028d90611092565b6001600160a01b038116610e0b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028d565b610e1481610e17565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600160ff1b8210610e8d57604051630134249960e71b815260040160405180910390fd5b5090565b600080821215610e8d57604051630134249960e71b815260040160405180910390fd5b6001600160a01b0381168114610e1457600080fd5b8015158114610e1457600080fd5b60008060408385031215610eea57600080fd5b8235610ef581610eb4565b91506020830135610f0581610ec9565b809150509250929050565b600080600080600060a08688031215610f2857600080fd5b8535610f3381610ec9565b94506020860135610f4381610eb4565b93506040860135610f5381610eb4565b94979396509394606081013594506080013592915050565b600060208284031215610f7d57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b60008060408385031215610fab57600080fd5b8235610fb681610eb4565b91506020830135610f0581610eb4565b60008060408385031215610fd957600080fd5b8235610fe481610eb4565b946020939093013593505050565b60006020828403121561100457600080fd5b813561100f81610eb4565b9392505050565b60006020828403121561102857600080fd5b813561100f81610ec9565b821515815260006020604081840152835180604085015260005b818110156110695785810183015185820160600152820161104d565b8181111561107b576000606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6040516101e081016001600160401b03811182821017156110f857634e487b7160e01b600052604160045260246000fd5b60405290565b805160ff8116811461110f57600080fd5b919050565b805161110f81610eb4565b805161110f81610ec9565b60006101e0828403121561113d57600080fd5b6111456110c7565b61114e836110fe565b815261115c60208401611114565b602082015261116d60408401611114565b6040820152606083810151908201526080808401519082015260a0808401519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c06111f481850161111f565b908201529392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561123f5761123f611215565b5060010190565b60008282101561125857611258611215565b500390565b634e487b7160e01b600052603160045260246000fd5b600181815b808511156112ae57816000190482111561129457611294611215565b808516156112a157918102915b93841c9390800290611278565b509250929050565b6000826112c557506001611353565b816112d257506000611353565b81600181146112e857600281146112f25761130e565b6001915050611353565b60ff84111561130357611303611215565b50506001821b611353565b5060208310610133831016604e8410600b8410161715611331575081810a611353565b61133b8383611273565b806000190482111561134f5761134f611215565b0290505b92915050565b600061100f60ff8416836112b6565b60006020828403121561137a57600080fd5b5051919050565b6000821982111561139457611394611215565b500190565b60008160001904831182151516156113b3576113b3611215565b500290565b6000826113d557634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156113ec57600080fd5b815161100f81610ec956fea26469706673582212208bf6c91e389195e400679d6d2706da0ab1c678e5601eeac27df0c643379dd31664736f6c634300080b0033";

export class HarvestResolver__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HarvestResolver> {
    return super.deploy(overrides || {}) as Promise<HarvestResolver>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HarvestResolver {
    return super.attach(address) as HarvestResolver;
  }
  connect(signer: Signer): HarvestResolver__factory {
    return super.connect(signer) as HarvestResolver__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HarvestResolverInterface {
    return new utils.Interface(_abi) as HarvestResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HarvestResolver {
    return new Contract(address, _abi, signerOrProvider) as HarvestResolver;
  }
}
